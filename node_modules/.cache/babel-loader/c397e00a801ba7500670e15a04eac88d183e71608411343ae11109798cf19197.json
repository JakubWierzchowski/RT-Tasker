{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const useAppSelector = useSelector;\nexport const useAppDispatch = useDispatch;\nexport const useTasks = () => {\n  _s();\n  const tasks = useAppSelector(state => state.tasks.entities);\n  const loading = useAppSelector(state => !!state.tasks.loading);\n  return useMemo(() => [tasks, loading], [tasks, loading]);\n};\n_s(useTasks, \"nTiCTecNGh1aFSqnBaQ7GyaOqJU=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});","map":{"version":3,"names":["useMemo","useDispatch","useSelector","useAppSelector","useAppDispatch","useTasks","tasks","state","entities","loading"],"sources":["/Users/Kuba/supertasker/src/lib/hooks.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { ApplicationDispatch, ApplicationState } from './store';\nexport const useAppSelector: TypedUseSelectorHook<ApplicationState> =\n  useSelector;\nexport const useAppDispatch: () => ApplicationDispatch = useDispatch;\n\nexport const useTasks = () => {\n  const tasks = useAppSelector((state) => state.tasks.entities);\n  const loading = useAppSelector((state) => !!state.tasks.loading);\n  return useMemo(() => [tasks, loading] as const, [tasks, loading]);\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE5E,OAAO,MAAMC,cAAsD,GACjED,WAAW;AACb,OAAO,MAAME,cAAyC,GAAGH,WAAW;AAEpE,OAAO,MAAMI,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAMC,KAAK,GAAGH,cAAc,CAAEI,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACE,QAAQ,CAAC;EAC7D,MAAMC,OAAO,GAAGN,cAAc,CAAEI,KAAK,IAAK,CAAC,CAACA,KAAK,CAACD,KAAK,CAACG,OAAO,CAAC;EAChE,OAAOT,OAAO,CAAC,MAAM,CAACM,KAAK,EAAEG,OAAO,CAAU,EAAE,CAACH,KAAK,EAAEG,OAAO,CAAC,CAAC;AACnE,CAAC;AAAC,GAJWJ,QAAQ;EAAA,QACLF,cAAc,EACZA,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}