{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport data from '../api/data.json';\nconst initialState = {\n  entities: data.users\n};\n\n// type DraftUser = RequireOnly<User, 'realName' | 'alterEgo'>;\n\nconst createUser = draftUser => {\n  return {\n    id: nanoid(),\n    tasks: [],\n    ...draftUser\n  };\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      const user = createUser(action.payload);\n      state.entities.unshift(user);\n    },\n    removeUser: (state, action) => {\n      const index = state.entities.findIndex(user => user.id === action.payload);\n      state.entities.splice(index, 1);\n    }\n  }\n});\nexport const usersReducer = usersSlice.reducer;\nexport const {\n  addUser,\n  removeUser\n} = usersSlice.actions;\nexport default usersSlice;","map":{"version":3,"names":["createSlice","nanoid","data","initialState","entities","users","createUser","draftUser","id","tasks","usersSlice","name","reducers","addUser","state","action","user","payload","unshift","removeUser","index","findIndex","splice","usersReducer","reducer","actions"],"sources":["/Users/Kuba/supertasker/src/features/user-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport data from '../api/data.json';\n\ntype UsersState = {\n  entities: User[];\n};\n\nconst initialState: UsersState = {\n  entities: data.users,\n};\n\n// type DraftUser = RequireOnly<User, 'realName' | 'alterEgo'>;\n\nconst createUser = (draftUser: any): User => {\n  return { id: nanoid(), tasks: [], ...draftUser };\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action: PayloadAction<User>) => {\n      const user = createUser(action.payload);\n      state.entities.unshift(user);\n    },\n    removeUser: (state, action: PayloadAction<User['id']>) => {\n      const index = state.entities.findIndex(\n        (user) => user.id === action.payload,\n      );\n      state.entities.splice(index, 1);\n    },\n  },\n});\n\nexport const usersReducer = usersSlice.reducer;\nexport const { addUser, removeUser } = usersSlice.actions;\n\nexport default usersSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,IAAI,MAAM,kBAAkB;AAMnC,MAAMC,YAAwB,GAAG;EAC/BC,QAAQ,EAAEF,IAAI,CAACG;AACjB,CAAC;;AAED;;AAEA,MAAMC,UAAU,GAAIC,SAAc,IAAW;EAC3C,OAAO;IAAEC,EAAE,EAAEP,MAAM,EAAE;IAAEQ,KAAK,EAAE,EAAE;IAAE,GAAGF;EAAU,CAAC;AAClD,CAAC;AAED,MAAMG,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,OAAO;EACbR,YAAY;EACZS,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAA2B,KAAK;MAC/C,MAAMC,IAAI,GAAGV,UAAU,CAACS,MAAM,CAACE,OAAO,CAAC;MACvCH,KAAK,CAACV,QAAQ,CAACc,OAAO,CAACF,IAAI,CAAC;IAC9B,CAAC;IACDG,UAAU,EAAE,CAACL,KAAK,EAAEC,MAAiC,KAAK;MACxD,MAAMK,KAAK,GAAGN,KAAK,CAACV,QAAQ,CAACiB,SAAS,CACnCL,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKO,MAAM,CAACE,OAAO,CACrC;MACDH,KAAK,CAACV,QAAQ,CAACkB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAGb,UAAU,CAACc,OAAO;AAC9C,OAAO,MAAM;EAAEX,OAAO;EAAEM;AAAW,CAAC,GAAGT,UAAU,CAACe,OAAO;AAEzD,eAAef,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}