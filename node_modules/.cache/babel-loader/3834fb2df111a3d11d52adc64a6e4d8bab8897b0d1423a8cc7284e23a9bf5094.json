{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport data from '../api/data.json';\nimport { removeUser } from './user-slice';\nexport const createTask = draftTask => {\n  return {\n    id: nanoid(),\n    ...draftTask\n  };\n};\nconst initialState = {\n  entities: data.tasks\n};\nconst tasksSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const task = createTask(action.payload);\n      state.entities.unshift(task);\n    },\n    removeTask: (state, action) => {\n      const index = state.entities.findIndex(task => task.id === action.payload);\n      state.entities.splice(index, 1);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(removeUser, (state, action) => {\n      const userId = action.payload;\n      for (const task of state.entities) {\n        if (task.user === userId) {\n          task.userId = undefined;\n        }\n      }\n    });\n  }\n});\nexport const tasksReducer = tasksSlice.reducer;\nexport const {\n  addTask,\n  removeTask\n} = tasksSlice.actions;\nexport default tasksSlice;","map":{"version":3,"names":["createSlice","nanoid","data","removeUser","createTask","draftTask","id","initialState","entities","tasks","tasksSlice","name","reducers","addTask","state","action","task","payload","unshift","removeTask","index","findIndex","splice","extraReducers","builder","addCase","userId","user","undefined","tasksReducer","reducer","actions"],"sources":["/Users/Kuba/supertasker/src/features/tasks-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport data from '../api/data.json';\nimport { removeUser } from './user-slice';\ntype TaskState = {\n  entities: Task[];\n};\n\ntype DraftTask = Pick<Task, 'title'>;\n\nexport const createTask = (draftTask: DraftTask): Task => {\n  return { id: nanoid(), ...draftTask };\n};\nconst initialState: TaskState = {\n  entities: data.tasks,\n};\n\nconst tasksSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    addTask: (state, action: PayloadAction<DraftTask>) => {\n      const task = createTask(action.payload);\n      state.entities.unshift(task);\n    },\n    removeTask: (state, action: PayloadAction<Task['id']>) => {\n      const index = state.entities.findIndex(\n        (task) => task.id === action.payload,\n      );\n      state.entities.splice(index, 1);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(removeUser, (state, action) => {\n      const userId = action.payload;\n      for (const task of state.entities) {\n        if (task.user === userId) {\n          task.userId = undefined;\n        }\n      }\n    });\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\nexport const { addTask, removeTask } = tasksSlice.actions;\nexport default tasksSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,UAAU,QAAQ,cAAc;AAOzC,OAAO,MAAMC,UAAU,GAAIC,SAAoB,IAAW;EACxD,OAAO;IAAEC,EAAE,EAAEL,MAAM,EAAE;IAAE,GAAGI;EAAU,CAAC;AACvC,CAAC;AACD,MAAME,YAAuB,GAAG;EAC9BC,QAAQ,EAAEN,IAAI,CAACO;AACjB,CAAC;AAED,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAgC,KAAK;MACpD,MAAMC,IAAI,GAAGZ,UAAU,CAACW,MAAM,CAACE,OAAO,CAAC;MACvCH,KAAK,CAACN,QAAQ,CAACU,OAAO,CAACF,IAAI,CAAC;IAC9B,CAAC;IACDG,UAAU,EAAE,CAACL,KAAK,EAAEC,MAAiC,KAAK;MACxD,MAAMK,KAAK,GAAGN,KAAK,CAACN,QAAQ,CAACa,SAAS,CACnCL,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKS,MAAM,CAACE,OAAO,CACrC;MACDH,KAAK,CAACN,QAAQ,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjC;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACtB,UAAU,EAAE,CAACW,KAAK,EAAEC,MAAM,KAAK;MAC7C,MAAMW,MAAM,GAAGX,MAAM,CAACE,OAAO;MAC7B,KAAK,MAAMD,IAAI,IAAIF,KAAK,CAACN,QAAQ,EAAE;QACjC,IAAIQ,IAAI,CAACW,IAAI,KAAKD,MAAM,EAAE;UACxBV,IAAI,CAACU,MAAM,GAAGE,SAAS;QACzB;MACF;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGnB,UAAU,CAACoB,OAAO;AAC9C,OAAO,MAAM;EAAEjB,OAAO;EAAEM;AAAW,CAAC,GAAGT,UAAU,CAACqB,OAAO;AACzD,eAAerB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}